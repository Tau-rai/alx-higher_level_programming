# test cases

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 9,13]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 3.0, 4.33]]
>>> matrix_divided(matrix, 9)
[[0.11, 0.22, 0.33], [0.44, 0.56, 0.67], [0.78, 1.0, 1.44]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided(matrix, "3")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 9 ]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 9, "ta"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 9, "5"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 9, 5]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 3.0, 1.67]]
>>> matrix_divided(matrix, -3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0], [-2.33, -3.0, -1.67]]
>>> matrix_divided(matrix, 1.5)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0], [4.67, 6.0, 3.33]]
>>> matrix_divided(matrix, 1, 3, 8)
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 4 were given