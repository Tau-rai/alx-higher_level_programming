#Test cases for the text_indentation function

>>> text_indentation = __import__('5-text_indentation').text_indentation
>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere.""") #doctest: +NORMALIZE_WHITESPACE
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
>>> text_indentation(123)
Traceback (most recent call last):
...
TypeError: text must be a string
>>> text_indentation("") #doctest: +NORMALIZE_WHITESPACE

>>> text_indentation(["ndeip, zvirise: wangu", 123, 'y'])
Traceback (most recent call last):
...
TypeError: text must be a string
>>> text_indentation("ndeip")
ndeip
>>> text_indentation(ndeip)
Traceback (most recent call last):
...
NameError: name 'ndeip' is not defined
>>> text_indentation(7.7)
Traceback (most recent call last):
...
TypeError: text must be a string
>>> text_indentation("7:7") #doctest: +NORMALIZE_WHITESPACE 
7:
<BLANKLINE>
7
>>> text_indentation({3: "handei", 4: "kubasa"})
Traceback (most recent call last):
...
TypeError: text must be a string
>>> text_indentation((3, "handei", 4, "kubasa"))
Traceback (most recent call last):
...
TypeError: text must be a string